generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}

model User {
  id             String      @id @default(uuid())
  Name           String?
  Surname        String?
  Email          String?     @unique
  IdNumber       String?     @unique
  MobileNumber   String?     @unique
  Address        String?
  City           String?
  ZipCode        String?
  Province       String?
  DateOfBirth    DateTime?
  MaritalStatus  String?
  Gender         String?
  Nationality    String?
  EmployeeType   String?
  NDTEmail       String?     @unique
  Password       String?
  departmentId   String?
  departmentName String?
  Role           String?     @default("Employee")
  Position       String?
  StartDate      DateTime?
  OfficeLocation String?
  createdAt      DateTime    @default(now())
  tableRows      TableRow[]
  department     Department? @relation(fields: [departmentId], references: [id])
}

model Project {
  id              String      @id @default(uuid())
  Project_Name    String      @unique
  Project_Manager String
  Client_Name     String
  Description     String
  Department_Id   String?
  assignedMembers String[]
  department      Department? @relation(fields: [Department_Id], references: [id])
}

model Department {
  id              String    @id @default(uuid())
  Department_Name String    @unique
  projects        Project[]
  users           User[]
}

model Timesheet {
  id              String   @id @default(uuid())
  Full_Name       String
  Project_Name    String
  Task_performed  String?
  Week            String
  Monday          Int?
  Tuesday         Int?
  Wednesday       Int?
  Thursday        Int?
  Friday          Int?
  Total_hours     Float    @default(0.0)
  Approval_Status String   @default("Pending")
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model Task {
  id            String   @id @default(uuid())
  taskPerformed String
  taskStatus    String
  tableRowId    String
  tableRow      TableRow @relation(fields: [tableRowId], references: [id])
}

model TableDetails {
  id              String     @id @default(uuid())
  month           String
  name            String
  role            String
  weeklyPeriod    String
  projectManager  String
  projectName     String
  Approval_Status String
  comments        String?
  tableRows       TableRow[]
}

model TableRow {
  id             String       @id @default(uuid())
  weekday        String
  typeOfDay      String
  totalHours     Float
  comment        String
  userId         String
  tableDetailsId String
  tableDetails   TableDetails @relation(fields: [tableDetailsId], references: [id])
  user           User         @relation(fields: [userId], references: [id])
  tasks          Task[]
}
